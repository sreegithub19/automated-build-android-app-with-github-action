name: Android Emulator Screenshot & Connected Check with Appium

on:
  push:
    branches: [ master ]

jobs:
  emulator-screenshot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Enable KVM on runner
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run Appium Server in Docker
        run: |
          docker run -d -p 4723:4723 appium/appium
          sleep 10

      - name: Create minimal Android app source and test files
        run: |
          mkdir -p app/src/main/java/com/example/helloworld
          mkdir -p app/src/main/res/layout
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/mipmap
          mkdir -p app/src/androidTest/java/com/example/helloworld
          echo "android.useAndroidX=true" > gradle.properties
          cat > settings.gradle <<EOF
          rootProject.name = "HelloWorld"
          include ':app'
          EOF
          cat > build.gradle <<EOF
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.3'
              }
          }
          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }
          EOF
          cat > app/build.gradle <<EOF
          plugins {
              id 'com.android.application'
          }
          android {
              namespace 'com.example.helloworld'
              compileSdk 33
              defaultConfig {
                  applicationId "com.example.helloworld"
                  minSdk 21
                  targetSdk 33
                  versionCode 1
                  versionName "1.0"
                  testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
              }
              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }
          }
          dependencies {
              implementation 'androidx.appcompat:appcompat:1.6.1'
              implementation 'com.google.android.material:material:1.9.0'
              testImplementation 'junit:junit:4.13.2'
              androidTestImplementation 'androidx.test.ext:junit:1.1.5'
              androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
              androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
              androidTestImplementation 'androidx.test:runner:1.5.2'
              androidTestImplementation 'androidx.test:rules:1.5.0'
              androidTestImplementation 'androidx.test:core:1.5.0'
              androidTestImplementation 'junit:junit:4.13.2'
          }
          EOF
          cat > app/src/main/AndroidManifest.xml <<EOF
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.example.helloworld">
              <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
              <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
              <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
              <application
                  android:allowBackup="true"
                  android:icon="@mipmap/ic_launcher"
                  android:label="@string/app_name"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:supportsRtl="true"
                  android:theme="@style/AppTheme">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF
          cat > app/src/main/java/com/example/helloworld/MainActivity.java <<EOF
          package com.example.helloworld;
          import android.os.Bundle;
          import androidx.appcompat.app.AppCompatActivity;
          public class MainActivity extends AppCompatActivity {
              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);
              }
          }
          EOF
          cat > app/src/main/res/layout/activity_main.xml <<EOF
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:gravity="center">
              <TextView
                  android:id="@+id/hello"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="Hello World from Actions!"
                  android:textSize="24sp"/>
          </LinearLayout>
          EOF
          cat > app/src/main/res/values/strings.xml <<EOF
          <resources>
              <string name="app_name">HelloWorld</string>
          </resources>
          EOF
          cat > app/src/main/res/values/styles.xml <<EOF
          <resources>
              <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar" />
          </resources>
          EOF
          cat > app/src/main/res/mipmap/ic_launcher.xml <<EOF
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="48dp"
              android:height="48dp"
              android:viewportWidth="48"
              android:viewportHeight="48">
              <path android:fillColor="#3DDC84" android:pathData="M0,0h48v48h-48z"/>
              <path android:fillColor="#FFF" android:pathData="M24,8a16,16 0 1,0 0,32a16,16 0 1,0 0,-32z"/>
          </vector>
          EOF
          cat > app/src/main/res/mipmap/ic_launcher_round.xml <<EOF
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="48dp"
              android:height="48dp"
              android:viewportWidth="48"
              android:viewportHeight="48">
              <path android:fillColor="#3DDC84" android:pathData="M24,4a20,20 0 1,0 0,40a20,20 0 1,0 0,-40z"/>
              <path android:fillColor="#FFF" android:pathData="M24,12a12,12 0 1,0 0,24a12,12 0 1,0 0,-24z"/>
          </vector>
          EOF
          cat > app/proguard-rules.pro <<EOF
          # No rules
          EOF

      - name: Set Gradle wrapper executable
        run: |
          gradle wrapper
          chmod +x gradlew

      - name: Run Connected and Appium Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: |
            adb wait-for-device
            adb devices
            sleep 40

            ./gradlew connectedCheck || true

            echo "Starting Appium Screenshot Test with Node.js"
            npm install wd
            node tests.js

      - name: Upload Emulator Test Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-screenshots
          path: screenshots/

      - name: Upload Android Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results
          path: app/build/reports/
